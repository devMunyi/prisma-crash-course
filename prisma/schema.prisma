generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String   @map("firstName")
  role    Role?    @default(USER)
  profile Profile?
  posts   Post[]

  @@index([name])
  @@index([email])
  @@map("users")
}

enum Role {
  USER
  ADMIN
}

model Profile {
  id     Int    @id @default(autoincrement())
  bio    String
  userId Int    @unique
  user   User   @relation(fields: [userId], references: [id])

  @@map("profiles")
}

model Post {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  authorId    Int
  author      User       @relation(fields: [authorId], references: [id])
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  published   Boolean    @default(false)
  categories  Category[]

  @@index([authorId])
  @@map("posts")
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[]

  @@map("category")
}

// illustrating multiple fields foreign key constraints
// model User {
//   firstname String
//   lastname String
//   profile Profile?

//   @@id([firstname, lastname])
// }

// model Profile {
//   id Int @id @default(autoincrement())
//   userFirstname String
//   userLastname String

//   user User @relation(fields: [userFirstname, userLastname], references: [firstname, lastname])

//   @@unique([userFirstname, userLastname])
// }
